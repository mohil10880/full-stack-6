<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Banking App</title>
    <style>
        body {
            font-family: Arial;
            margin: 40px;
        }
        .section {
            margin-bottom: 30px;
            border: 1px solid #ccc;
            padding: 15px;
            width: 400px;
            border-radius: 6px;
        }
        input, button {
            margin: 5px 0;
            padding: 8px;
            width: 100%;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>

<h1>üè¶ Secure Banking App</h1>

<div id="registerSection" class="section">
    <h3>Register</h3>
    <input type="text" id="regUsername" placeholder="Username">
    <input type="password" id="regPassword" placeholder="Password">
    <button onclick="register()">Register</button>
    <p id="registerMsg"></p>
</div>

<div id="loginSection" class="section">
    <h3>Login</h3>
    <input type="text" id="loginUsername" placeholder="Username">
    <input type="password" id="loginPassword" placeholder="Password">
    <button onclick="login()">Login</button>
    <p id="loginMsg"></p>
</div>

<div id="bankSection" class="section hidden">
    <h3>Welcome, <span id="userName"></span></h3>
    <p><strong>Balance:</strong> ‚Çπ<span id="balance">0</span></p>

    <h4>üí∏ Transfer Money</h4>
    <input type="number" id="fromId" placeholder="From Account ID">
    <input type="number" id="toId" placeholder="To Account ID">
    <input type="number" id="amount" placeholder="Amount">
    <button onclick="transfer()">Transfer</button>
    <p id="transferMsg"></p>

    <button onclick="logout()">Logout</button>
</div>

<script>
const BASE_URL = "http://localhost:8080/api";
let jwtToken = null;

// ---------- Register ----------
async function register() {
    const username = document.getElementById("regUsername").value;
    const password = document.getElementById("regPassword").value;
    const res = await fetch(`${BASE_URL}/auth/register`, {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({username, password, role: "USER"})
    });
    const text = await res.text();
    document.getElementById("registerMsg").innerText = text;
}

// ---------- Login ----------
async function login() {
    const username = document.getElementById("loginUsername").value;
    const password = document.getElementById("loginPassword").value;

    const res = await fetch(`${BASE_URL}/auth/login`, {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({username, password})
    });

    if (res.ok) {
        jwtToken = await res.text();
        localStorage.setItem("jwtToken", jwtToken);
        document.getElementById("loginMsg").innerText = "‚úÖ Login successful!";
        showBankSection(username);
    } else {
        document.getElementById("loginMsg").innerText = "‚ùå Login failed!";
    }
}

// ---------- Transfer ----------
async function transfer() {
    const fromId = document.getElementById("fromId").value;
    const toId = document.getElementById("toId").value;
    const amount = document.getElementById("amount").value;

    const res = await fetch(`${BASE_URL}/transactions/transfer?fromId=${fromId}&toId=${toId}&amount=${amount}`, {
        method: "POST",
        headers: {
            "Authorization": "Bearer " + jwtToken
        }
    });

    const msg = await res.text();
    document.getElementById("transferMsg").innerText = msg;
}

// ---------- Logout ----------
function logout() {
    localStorage.removeItem("jwtToken");
    jwtToken = null;
    document.getElementById("bankSection").classList.add("hidden");
    document.getElementById("loginSection").classList.remove("hidden");
}

// ---------- Helper to Show Bank Section ----------
function showBankSection(username) {
    document.getElementById("loginSection").classList.add("hidden");
    document.getElementById("registerSection").classList.add("hidden");
    document.getElementById("bankSection").classList.remove("hidden");
    document.getElementById("userName").innerText = username;
}
</script>

</body>
</html>
@Bean
public WebMvcConfigurer corsConfigurer() {
    return new WebMvcConfigurer() {
        @Override
        public void addCorsMappings(CorsRegistry registry) {
            registry.addMapping("/api/**")
                    .allowedOrigins("http://localhost:5500")
                    .allowedMethods("*")
                    .allowedHeaders("*")
                    .exposedHeaders("Authorization");
        }
    };
}
